{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newEntry","post","id","put","delete","Filter","value","handleChange","onChange","PersonForm","props","name","handleNameChange","number","handleNumberChange","type","onClick","addPerson","Persons","persons","removePerson","map","person","key","Notification","message","notificationStyle","color","isError","background","fontsize","borderStyle","borderRadius","padding","marginBottom","style","text","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","searchFilter","setSearchFilter","setMessage","useEffect","personsService","initialPersons","displayMessage","setTimeout","personsToDisplay","filter","toLowerCase","includes","event","target","preventDefault","some","window","confirm","oldPerson","find","p","updatedPerson","catch","error","newPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46be4b5e.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const response = axios.get(baseUrl)\n  return response.then(response => response.data)\n}\n\nconst create = (newEntry) => {\n  const response = axios.post(baseUrl, newEntry)\n  return response.then(response => response.data)\n}\n\nconst update = (id, newEntry) => {\n  const response = axios.put(`${baseUrl}/${id}`, newEntry)\n  return response.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const response = axios.delete(`${baseUrl}/${id}`)\n  return response\n}\n\n\nexport default {getAll, create, update, remove}","import React from 'react'\n\nconst Filter = ({ value, handleChange }) => {\n  return (\n    <div>\n        filter shown with <input value={value} onChange={handleChange} />\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n  return (\n    <form>\n      <div>\n        name: <input value={props.name} onChange={props.handleNameChange}/>\n      </div>\n      <div>\n        number: <input value={props.number} onChange={props.handleNumberChange}/>\n      </div>\n      \n      <div>\n        <button type=\"submit\" onClick={props.addPerson}>add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ persons, removePerson }) => {\n  return (\n    persons.map((person) => \n      <div key={person.name}>\n        {person.name} {person.number} {' '}\n        <button onClick={() => removePerson(person.id)}>\n          delete\n        </button>\n      </div>\n    )\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  const notificationStyle = {\n    color: message.isError ? 'red' : 'green',\n    background: 'lightgrey',\n    fontsize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n  \n  return (\n    <div style={notificationStyle}>\n      {message.text}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personsService from './services/persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchFilter, setSearchFilter ] = useState('')\n  const [ message, setMessage ] = useState(null)\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterChange = (event) => setSearchFilter(event.target.value)\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const displayMessage = (message, isError) => {\n    setMessage({text: message, isError})\n    setTimeout(() => {\n      setMessage(null)\n    }, 3000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    if (persons.some(person => person.name === newName)) {\n      const replacePerson = window.confirm(`\n        ${newName} is already added to the phonebook, replace the old number with a new one?\n      `)\n      \n      if (replacePerson) {\n        const oldPerson = persons.find(p => p.name === newName)\n        personsService\n          .update(oldPerson.id, {...oldPerson, number: newNumber})\n          .then(updatedPerson => {\n            setPersons(persons.map(p => p.id !== updatedPerson.id ? p : updatedPerson))\n            setNewName('')\n            setNewNumber('')\n            displayMessage(`\n              Information of ${updatedPerson.name} has been updated in the server\n            `, false)\n          })\n          .catch(error => {displayMessage(error.response.data.error, true)})\n      }\n      return\n    }\n    \n    personsService\n      .create({ name: newName, number: newNumber })\n      .then(newPerson => {\n        setPersons(persons.concat(newPerson))\n        displayMessage(`\n          Information of ${newName} has been added to the server\n        `, false)\n        setNewName('')\n        setNewNumber('')\n      })\n      .catch(error => {displayMessage(error.response.data.error, true)})\n  }\n\n  const personsToDisplay = persons.filter((person) => \n    person.name.toLowerCase().includes(searchFilter.toLowerCase())\n  )\n\n  const removePersonWithId = (id) => {\n    personsService\n      .remove(id)\n      .then(response => {\n        setPersons(persons.filter(p => p.id !== id))\n      })\n      .catch(error => {\n        const name = persons.find(p => p.id === id).name\n        setPersons(persons.filter(p => p.id !== id))\n        displayMessage(`\n          Information of ${name} has already been removed from server\n        `, true)\n      })\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n\n      <Filter value={searchFilter} handleChange={handleFilterChange} />\n\n      <h2>add a new</h2>\n\n      <PersonForm\n        name={newName}\n        handleNameChange={handleNameChange}\n        number={newNumber}\n        handleNumberChange={handleNumberChange}\n        addPerson={addPerson}\n      />\n\n      <h2>Numbers</h2>\n      \n      <Persons persons={personsToDisplay} removePerson={removePersonWithId} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}